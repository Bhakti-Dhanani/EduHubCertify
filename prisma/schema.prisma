generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Student
  Instructor
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  name         String
  role         Role
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  certificates Certificate[] @relation("CertificateUser")
  courses      Course[]      @relation("InstructorCourses")
  enrollments  Enrollment[]
  forumPosts   ForumPost[]   @relation("ForumPostUser")
}

model Course {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  instructorId Int           // Changed to Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  assignments  Assignment[]  @relation("AssignmentCourse")
  certificates Certificate[]
  instructor   User          @relation("InstructorCourses", fields: [instructorId], references: [id])
  enrollments  Enrollment[]
  forumPosts   ForumPost[]
  modules      Module[]
  thumbnail    String?       // Optional field for course thumbnail
}

model Module {
  id        Int      @id @default(autoincrement())
  title     String
  courseId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lessons   Lesson[]
  course    Course   @relation(fields: [courseId], references: [id])
}

model Lesson {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  moduleId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  module    Module   @relation(fields: [moduleId], references: [id])
}

model Assignment {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  courseId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course    Course   @relation("AssignmentCourse", fields: [courseId], references: [id])
}

model Certificate {
  id       Int      @id @default(autoincrement())
  userId   Int
  courseId Int
  issuedAt DateTime @default(now())
  course   Course   @relation(fields: [courseId], references: [id])
  user     User     @relation("CertificateUser", fields: [userId], references: [id])
}

model ForumPost {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  courseId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course    Course   @relation(fields: [courseId], references: [id])
  user      User     @relation("ForumPostUser", fields: [userId], references: [id])
}

model Enrollment {
  id        Int      @id @default(autoincrement())
  userId    Int
  courseId  Int
  createdAt DateTime @default(now())
  course    Course   @relation(fields: [courseId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
